{"version":3,"sources":["components/Layout/Popover/index.tsx","components/Playground/index.tsx","../../src/util.ts","../../src/useArrowContainer.ts","../../src/Popover.tsx","../../src/PopoverPortal.tsx","../../src/usePopover.ts","../../src/useElementRef.ts","../../src/useMemoizedArray.ts","../../src/ArrowContainer.tsx","components/Layout/Popover/popover.module.scss"],"names":["CustomPopover","isShow","activator","children","Popover","isOpen","padding","positions","align","containerStyle","top","content","position","childRect","popoverRect","arrowColor","arrowSize","arrowStyle","className","styles","popover","Playground","useState","isActive","setActive","FormInput","label","type","value","Button","variant","loading","style","width","height","background","onClick","Constants","POPOVER_CONTAINER_CLASS_NAME","DEFAULT_ALIGN","OBSERVER_THRESHOLDS","Array","fill","map","_","i","reverse","DEFAULT_POSITIONS","EMPTY_CLIENT_RECT","left","bottom","right","arrayUnique","array","filter","index","self","indexOf","rectsAreEqual","rectA","rectB","popoverStatesAreEqual","stateA","stateB","nudgedLeft","nudgedTop","targetPositionHasChanged","oldRect","newRect","undefined","createContainer","containerClassName","container","window","document","createElement","Object","assign","getBoundingRectNeglectingPositionalTransform","element","el","offsetTop","offsetLeft","offsetParent","scrollTop","scrollLeft","parentElement","getBoundingClientRect","popoverRectForPosition","targetMidX","targetMidY","getNewPopoverRect","boundaryInset","boundaryRect","reposition","rect","boundaryViolation","getNudgedPopoverRect","topBoundary","leftBoundary","rightBoundary","bottomBoundary","useArrowContainer","arrowContainerStyle","useMemo","arrowWidth","lowerBound","leftUpperBound","topUpperBound","Number","isNaN","borderTop","borderBottom","borderRight","borderLeft","display","usePopover","ArrowContainer","PopoverInternal","forwardRef","externalRef","externalPositions","body","boundaryElement","contentLocation","onClickOutside","useMemoizedArray","prevIsOpen","useRef","prevPositions","prevContentLocation","prevReposition","childRef","parentRect","popoverState","setPopoverState","onPositionPopover","useCallback","positionPopover","popoverRef","scoutRef","useLayoutEffect","shouldUpdate","requestAnimationFrame","updatePopover","current","useEffect","popoverElement","keys","forEach","key","handleOnClickOutside","e","contains","target","handleWindowResize","addEventListener","removeEventListener","handleRef","node","cloneElement","ref","PopoverPortal","scoutElement","props","appendChild","removeChild","createPortal","useElementRef","overflow","visibility","positionIndex","scoutRect","inputTop","inputLeft","transform","isExhausted","length","shouldNudge","finalTop","finalLeft","externalArray","prevArrayRef","arrowClassName","externalArrowStyle","externalArrowContainerStyle","mergedContainerStyle","mergedArrowStyle","module","exports"],"mappings":"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","file":"static/js/3.644e210a.chunk.js","sourcesContent":["import React from 'react';\nimport { ArrowContainer, Popover } from 'react-tiny-popover';\n\nimport styles from './popover.module.scss';\n\ntype TProps = {\n  isShow: boolean;\n  activator: JSX.Element;\n  children: React.ReactNode | React.ReactNode[] | string | string[];\n};\n\nconst CustomPopover: React.FC<TProps> = ({ isShow, activator, children }) => {\n  return (\n    <Popover\n      isOpen={isShow}\n      padding={10}\n      positions={['right', 'left', 'bottom', 'top']}\n      align=\"start\"\n      containerStyle={{ top: '-15px' }}\n      content={({ position, childRect, popoverRect }) => (\n        <ArrowContainer\n          position={position}\n          childRect={childRect}\n          popoverRect={popoverRect}\n          arrowColor=\"white\"\n          arrowSize={10}\n          arrowStyle={{ top: '20px' }}\n        >\n          <div className={styles.popover}> {children} </div>\n        </ArrowContainer>\n      )}\n    >\n      {activator}\n    </Popover>\n  );\n};\n\nexport default CustomPopover;\n","import { useState } from 'react';\n\nimport Button from '../Layout/Button';\nimport FormInput from '../Layout/Form/FormInput';\nimport Popover from '../Layout/Popover';\n\nconst Playground = () => {\n  const [isActive, setActive] = useState<boolean>(false);\n  const toggleActive = () => setActive(!isActive);\n  return (\n    <>\n      <FormInput label=\"Username\" type=\"text\" value=\"hello\" />\n      <Button variant=\"block-outline-primary\" loading>\n        Button\n      </Button>\n      <div style={{ width: '200px', height: '200px', background: 'white' }}>\n        <span style={{ position: 'relative' }}>\n          <Popover\n            isShow={isActive}\n            activator={\n              <button type=\"button\" onClick={toggleActive}>\n                Click!\n              </button>\n            }\n          >\n            hi\n          </Popover>\n        </span>\n      </div>\n    </>\n  );\n};\nexport default Playground;\n","import { PopoverPosition, PopoverState, PopoverAlign } from './index';\n\nexport const Constants = {\n  POPOVER_CONTAINER_CLASS_NAME: 'react-tiny-popover-container',\n  DEFAULT_ALIGN: 'center' as PopoverAlign,\n  OBSERVER_THRESHOLDS: Array(1000)\n    .fill(null)\n    .map((_, i) => i / 1000)\n    .reverse(),\n  DEFAULT_POSITIONS: ['top', 'left', 'right', 'bottom'] as PopoverPosition[],\n  EMPTY_CLIENT_RECT: {\n    top: 0,\n    left: 0,\n    bottom: 0,\n    height: 0,\n    right: 0,\n    width: 0,\n  } as ClientRect,\n} as const;\n\nexport const arrayUnique = <T>(array: T[]): T[] =>\n  array.filter((value: any, index: number, self: T[]) => self.indexOf(value) === index);\n\nexport const rectsAreEqual = (rectA: ClientRect, rectB: ClientRect) =>\n  rectA === rectB ||\n  (rectA?.bottom === rectB?.bottom &&\n    rectA?.height === rectB?.height &&\n    rectA?.left === rectB?.left &&\n    rectA?.right === rectB?.right &&\n    rectA?.top === rectB?.top &&\n    rectA?.width === rectB?.width);\n\nexport const popoverStatesAreEqual = (stateA: PopoverState, stateB: PopoverState): boolean =>\n  stateA === stateB ||\n  (stateA?.align === stateB?.align &&\n    stateA?.nudgedLeft === stateB?.nudgedLeft &&\n    stateA?.nudgedTop === stateB?.nudgedTop &&\n    stateA.padding === stateB.padding &&\n    rectsAreEqual(stateA?.popoverRect, stateB?.popoverRect) &&\n    rectsAreEqual(stateA?.childRect, stateB?.childRect) &&\n    stateA?.position === stateB?.position);\n\nexport const targetPositionHasChanged = (oldRect: ClientRect, newRect: ClientRect): boolean =>\n  oldRect === undefined ||\n  oldRect.left !== newRect.left ||\n  oldRect.top !== newRect.top ||\n  oldRect.width !== newRect.width ||\n  oldRect.height !== newRect.height;\n\nexport const createContainer = (\n  containerStyle?: Partial<CSSStyleDeclaration>,\n  containerClassName?: string,\n) => {\n  const container = window.document.createElement('div');\n  if (containerClassName) container.className = containerClassName;\n  Object.assign(container.style, containerStyle);\n  return container;\n};\n\nexport const getBoundingRectNeglectingPositionalTransform = (\n  element?: HTMLElement | null,\n): ClientRect | undefined => {\n  if (element == null) return undefined;\n\n  let el = element;\n  let top = 0;\n  let left = 0;\n\n  do {\n    top += el.offsetTop;\n    left += el.offsetLeft;\n    el = el.offsetParent as HTMLElement;\n  } while (el != null);\n\n  let scrollTop = 0;\n  let scrollLeft = 0;\n\n  el = element;\n  do {\n    scrollTop += el.scrollTop;\n    scrollLeft += el.scrollLeft;\n    el = el.parentElement;\n  } while (el != null);\n\n  top -= scrollTop;\n  left -= scrollLeft;\n\n  const { width, height } = element.getBoundingClientRect();\n  return { top, left, width, height, bottom: top + height, right: left + width };\n};\n\nexport const popoverRectForPosition = (\n  position: PopoverPosition,\n  childRect: ClientRect,\n  popoverRect: ClientRect,\n  padding: number,\n  align: PopoverAlign,\n): ClientRect => {\n  const targetMidX = childRect.left + childRect.width / 2;\n  const targetMidY = childRect.top + childRect.height / 2;\n  const { width, height } = popoverRect;\n  let top: number;\n  let left: number;\n\n  switch (position) {\n    case 'left':\n      top = targetMidY - height / 2;\n      left = childRect.left - padding - width;\n      if (align === 'start') {\n        top = childRect.top;\n      }\n      if (align === 'end') {\n        top = childRect.bottom - height;\n      }\n      break;\n    case 'bottom':\n      top = childRect.bottom + padding;\n      left = targetMidX - width / 2;\n      if (align === 'start') {\n        left = childRect.left;\n      }\n      if (align === 'end') {\n        left = childRect.right - width;\n      }\n      break;\n    case 'right':\n      top = targetMidY - height / 2;\n      left = childRect.right + padding;\n      if (align === 'start') {\n        top = childRect.top;\n      }\n      if (align === 'end') {\n        top = childRect.bottom - height;\n      }\n      break;\n    default:\n      top = childRect.top - height - padding;\n      left = targetMidX - width / 2;\n      if (align === 'start') {\n        left = childRect.left;\n      }\n      if (align === 'end') {\n        left = childRect.right - width;\n      }\n      break;\n  }\n\n  return { top, left, width, height, right: left + width, bottom: top + height };\n};\n\ninterface GetNewPopoverRectProps {\n  position: PopoverPosition;\n  reposition: boolean;\n  align: PopoverAlign;\n  childRect: ClientRect;\n  popoverRect: ClientRect;\n  boundaryRect: ClientRect;\n  padding: number;\n}\n\nexport const getNewPopoverRect = (\n  {\n    position,\n    align,\n    childRect,\n    popoverRect,\n    boundaryRect,\n    padding,\n    reposition,\n  }: GetNewPopoverRectProps,\n  boundaryInset: number,\n) => {\n  const rect = popoverRectForPosition(position, childRect, popoverRect, padding, align);\n\n  const boundaryViolation =\n    reposition &&\n    ((position === 'top' && rect.top < boundaryRect.top + boundaryInset) ||\n      (position === 'left' && rect.left < boundaryRect.left + boundaryInset) ||\n      (position === 'right' && rect.right > boundaryRect.right - boundaryInset) ||\n      (position === 'bottom' && rect.bottom > boundaryRect.bottom - boundaryInset));\n\n  return {\n    rect,\n    boundaryViolation,\n  };\n};\n\nexport const getNudgedPopoverRect = (\n  popoverRect: ClientRect,\n  boundaryRect: ClientRect,\n  boundaryInset: number,\n): ClientRect => {\n  const topBoundary = boundaryRect.top + boundaryInset;\n  const leftBoundary = boundaryRect.left + boundaryInset;\n  const rightBoundary = boundaryRect.right - boundaryInset;\n  const bottomBoundary = boundaryRect.bottom - boundaryInset;\n\n  let top = popoverRect.top < topBoundary ? topBoundary : popoverRect.top;\n  top = top + popoverRect.height > bottomBoundary ? bottomBoundary - popoverRect.height : top;\n  let left = popoverRect.left < leftBoundary ? leftBoundary : popoverRect.left;\n  left = left + popoverRect.width > rightBoundary ? rightBoundary - popoverRect.width : left;\n\n  return {\n    top,\n    left,\n    width: popoverRect.width,\n    height: popoverRect.height,\n    right: left + popoverRect.width,\n    bottom: top + popoverRect.height,\n  };\n};\n","import { useMemo } from 'react';\nimport { UseArrowContainerProps } from '.';\n\nexport const useArrowContainer = ({\n  childRect,\n  popoverRect,\n  position,\n  arrowSize,\n  arrowColor,\n}: UseArrowContainerProps) => {\n  const arrowContainerStyle = useMemo(\n    () =>\n      ({\n        padding: arrowSize,\n      } as React.CSSProperties),\n    [arrowSize],\n  );\n\n  const arrowStyle = useMemo(\n    () =>\n      ({\n        position: 'absolute',\n        ...((): React.CSSProperties => {\n          const arrowWidth = arrowSize * 2;\n          let top = childRect.top - popoverRect.top + childRect.height / 2 - arrowWidth / 2;\n          let left = childRect.left - popoverRect.left + childRect.width / 2 - arrowWidth / 2;\n\n          const lowerBound = arrowSize;\n          const leftUpperBound = popoverRect.width - arrowSize;\n          const topUpperBound = popoverRect.height - arrowSize;\n\n          left = left < lowerBound ? lowerBound : left;\n          left = left + arrowWidth > leftUpperBound ? leftUpperBound - arrowWidth : left;\n          top = top < lowerBound ? lowerBound : top;\n          top = top + arrowWidth > topUpperBound ? topUpperBound - arrowWidth : top;\n\n          top = Number.isNaN(top) ? 0 : top;\n          left = Number.isNaN(left) ? 0 : left;\n\n          switch (position) {\n            case 'right':\n              return {\n                borderTop: `${arrowSize}px solid transparent`,\n                borderBottom: `${arrowSize}px solid transparent`,\n                borderRight: `${arrowSize}px solid ${arrowColor}`,\n                left: 0,\n                top,\n              };\n            case 'left':\n              return {\n                borderTop: `${arrowSize}px solid transparent`,\n                borderBottom: `${arrowSize}px solid transparent`,\n                borderLeft: `${arrowSize}px solid ${arrowColor}`,\n                right: 0,\n                top,\n              };\n            case 'bottom':\n              return {\n                borderLeft: `${arrowSize}px solid transparent`,\n                borderRight: `${arrowSize}px solid transparent`,\n                borderBottom: `${arrowSize}px solid ${arrowColor}`,\n                top: 0,\n                left,\n              };\n            case 'top':\n              return {\n                borderLeft: `${arrowSize}px solid transparent`,\n                borderRight: `${arrowSize}px solid transparent`,\n                borderTop: `${arrowSize}px solid ${arrowColor}`,\n                bottom: 0,\n                left,\n              };\n            default:\n              return {\n                display: 'hidden',\n              };\n          }\n        })(),\n      } as React.CSSProperties),\n    [\n      arrowColor,\n      arrowSize,\n      childRect.height,\n      childRect.left,\n      childRect.top,\n      childRect.width,\n      popoverRect.height,\n      popoverRect.left,\n      popoverRect.top,\n      popoverRect.width,\n      position,\n    ],\n  );\n\n  return {\n    arrowContainerStyle,\n    arrowStyle,\n  };\n};\n","import {\n  useRef,\n  useLayoutEffect,\n  useState,\n  useCallback,\n  useEffect,\n  forwardRef,\n  cloneElement,\n} from 'react';\nimport { PopoverPortal } from './PopoverPortal';\nimport {\n  ContentLocation,\n  ContentLocationGetter,\n  PopoverPosition,\n  PopoverProps,\n  PopoverState,\n} from '.';\nimport { Constants, rectsAreEqual } from './util';\nimport { usePopover } from './usePopover';\nimport { useMemoizedArray } from './useMemoizedArray';\n\nexport { useArrowContainer } from './useArrowContainer';\nexport { ArrowContainer } from './ArrowContainer';\nexport { usePopover };\n\nconst PopoverInternal = forwardRef<HTMLElement, PopoverProps>(\n  (\n    {\n      isOpen,\n      children,\n      content,\n      positions: externalPositions = Constants.DEFAULT_POSITIONS,\n      align = Constants.DEFAULT_ALIGN,\n      padding = 0,\n      reposition = true,\n      parentElement = window.document.body,\n      boundaryElement = parentElement,\n      containerClassName = 'react-tiny-popover-container',\n      containerStyle,\n      contentLocation,\n      boundaryInset = 0,\n      onClickOutside,\n    },\n    externalRef,\n  ) => {\n    const positions = useMemoizedArray(externalPositions);\n\n    // TODO: factor prevs out into a custom prevs hook\n    const prevIsOpen = useRef(false);\n    const prevPositions = useRef<PopoverPosition[] | undefined>();\n    const prevContentLocation = useRef<ContentLocation | ContentLocationGetter | undefined>();\n    const prevReposition = useRef(reposition);\n\n    const childRef = useRef<HTMLElement | undefined>();\n\n    const [popoverState, setPopoverState] = useState<PopoverState>({\n      align,\n      nudgedLeft: 0,\n      nudgedTop: 0,\n      position: positions[0],\n      padding,\n      childRect: Constants.EMPTY_CLIENT_RECT,\n      popoverRect: Constants.EMPTY_CLIENT_RECT,\n      parentRect: Constants.EMPTY_CLIENT_RECT,\n      boundaryRect: Constants.EMPTY_CLIENT_RECT,\n      boundaryInset,\n    });\n\n    const onPositionPopover = useCallback(\n      (popoverState: PopoverState) => setPopoverState(popoverState),\n      [],\n    );\n\n    const { positionPopover, popoverRef, scoutRef } = usePopover({\n      childRef,\n      containerClassName,\n      parentElement,\n      boundaryElement,\n      contentLocation,\n      positions,\n      align,\n      padding,\n      boundaryInset,\n      reposition,\n      onPositionPopover,\n    });\n\n    useLayoutEffect(() => {\n      let shouldUpdate = true;\n      const updatePopover = () => {\n        if (isOpen && shouldUpdate) {\n          const childRect = childRef?.current?.getBoundingClientRect();\n          const popoverRect = popoverRef?.current?.getBoundingClientRect();\n          if (\n            childRect != null &&\n            popoverRect != null &&\n            (!rectsAreEqual(childRect, {\n              top: popoverState.childRect.top,\n              left: popoverState.childRect.left,\n              width: popoverState.childRect.width,\n              height: popoverState.childRect.height,\n              bottom: popoverState.childRect.top + popoverState.childRect.height,\n              right: popoverState.childRect.left + popoverState.childRect.width,\n            }) ||\n              popoverRect.width !== popoverState.popoverRect.width ||\n              popoverRect.height !== popoverState.popoverRect.height ||\n              popoverState.padding !== padding ||\n              popoverState.align !== align ||\n              positions !== prevPositions.current ||\n              contentLocation !== prevContentLocation.current ||\n              reposition !== prevReposition.current)\n          ) {\n            positionPopover();\n          }\n\n          // TODO: factor prev checks out into the custom prevs hook\n          if (positions !== prevPositions.current) {\n            prevPositions.current = positions;\n          }\n          if (contentLocation !== prevContentLocation.current) {\n            prevContentLocation.current = contentLocation;\n          }\n          if (reposition !== prevReposition.current) {\n            prevReposition.current = reposition;\n          }\n\n          if (shouldUpdate) {\n            window.requestAnimationFrame(updatePopover);\n          }\n        }\n\n        prevIsOpen.current = isOpen;\n      };\n\n      window.requestAnimationFrame(updatePopover);\n\n      return () => {\n        shouldUpdate = false;\n      };\n    }, [\n      align,\n      contentLocation,\n      isOpen,\n      padding,\n      popoverRef,\n      popoverState.align,\n      popoverState.childRect.height,\n      popoverState.childRect.left,\n      popoverState.childRect.top,\n      popoverState.childRect.width,\n      popoverState.padding,\n      popoverState.popoverRect.height,\n      popoverState.popoverRect.width,\n      positionPopover,\n      positions,\n      reposition,\n    ]);\n\n    useEffect(() => {\n      const popoverElement = popoverRef.current;\n\n      Object.assign(popoverElement.style, containerStyle);\n\n      return () => {\n        Object.keys(containerStyle ?? {}).forEach(\n          (key) =>\n            delete popoverElement.style[\n              key as keyof Omit<typeof containerStyle, 'length' | 'parentRule'>\n            ],\n        );\n      };\n    }, [containerStyle, isOpen, popoverRef]);\n\n    const handleOnClickOutside = useCallback(\n      (e: MouseEvent) => {\n        if (\n          isOpen &&\n          !popoverRef.current?.contains(e.target as Node) &&\n          !childRef.current?.contains(e.target as Node)\n        ) {\n          onClickOutside?.(e);\n        }\n      },\n      [isOpen, onClickOutside, popoverRef],\n    );\n\n    const handleWindowResize = useCallback(() => {\n      if (childRef.current) {\n        window.requestAnimationFrame(() => positionPopover());\n      }\n    }, [positionPopover]);\n\n    useEffect(() => {\n      window.addEventListener('click', handleOnClickOutside);\n      window.addEventListener('resize', handleWindowResize);\n      return () => {\n        window.removeEventListener('click', handleOnClickOutside);\n        window.removeEventListener('resize', handleWindowResize);\n      };\n    }, [handleOnClickOutside, handleWindowResize]);\n\n    const handleRef = useCallback(\n      (node: HTMLElement) => {\n        childRef.current = node;\n        if (externalRef != null) {\n          if (typeof externalRef === 'object') {\n            (externalRef as React.MutableRefObject<HTMLElement>).current = node;\n          } else if (typeof externalRef === 'function') {\n            (externalRef as (instance: HTMLElement) => void)(node);\n          }\n        }\n      },\n      [externalRef],\n    );\n\n    const renderChild = () =>\n      cloneElement(children as JSX.Element, {\n        ref: handleRef,\n      });\n\n    const renderPopover = () => {\n      if (!isOpen) return null;\n      return (\n        <PopoverPortal\n          element={popoverRef.current}\n          scoutElement={scoutRef.current}\n          container={parentElement}\n        >\n          {typeof content === 'function' ? content(popoverState) : content}\n        </PopoverPortal>\n      );\n    };\n\n    return (\n      <>\n        {renderChild()}\n        {renderPopover()}\n      </>\n    );\n  },\n);\n\nexport const Popover = forwardRef<HTMLElement, PopoverProps>((props, ref) => {\n  if (typeof window === 'undefined') return props.children;\n  return <PopoverInternal {...props} ref={ref} />;\n});\n","import { useLayoutEffect, FC } from 'react';\nimport { createPortal } from 'react-dom';\n\ninterface PopoverPortalProps {\n  container: Element;\n  element: Element;\n  scoutElement: Element;\n}\n\nconst PopoverPortal: FC<PopoverPortalProps> = ({ container, element, scoutElement, children }) => {\n  useLayoutEffect(() => {\n    container.appendChild(element);\n    container.appendChild(scoutElement);\n    return () => {\n      container.removeChild(element);\n      container.removeChild(scoutElement);\n    };\n  }, [container, element]);\n\n  return createPortal(children, element);\n};\n\nexport { PopoverPortal };\n","import { useCallback } from 'react';\nimport { PositionPopover, UsePopoverProps, UsePopoverResult } from '.';\nimport { getNewPopoverRect, getNudgedPopoverRect } from './util';\nimport { useElementRef } from './useElementRef';\n\nexport const usePopover = ({\n  childRef,\n  positions,\n  containerClassName,\n  parentElement,\n  contentLocation,\n  align,\n  padding,\n  reposition,\n  boundaryInset,\n  boundaryElement,\n  onPositionPopover,\n}: UsePopoverProps): UsePopoverResult => {\n  const popoverRef = useElementRef(containerClassName, {\n    position: 'fixed',\n    overflow: 'visible',\n    top: '0px',\n    left: '0px',\n  });\n\n  const scoutRef = useElementRef('react-tiny-popover-scout', {\n    position: 'fixed',\n    top: '0px',\n    left: '0px',\n    width: '0px',\n    height: '0px',\n    visibility: 'hidden',\n  });\n\n  const positionPopover = useCallback<PositionPopover>(\n    ({\n      positionIndex = 0,\n      parentRect = parentElement.getBoundingClientRect(),\n      childRect = childRef?.current?.getBoundingClientRect(),\n      scoutRect = scoutRef?.current?.getBoundingClientRect(),\n      popoverRect = popoverRef.current.getBoundingClientRect(),\n      boundaryRect = boundaryElement === parentElement\n        ? parentRect\n        : boundaryElement.getBoundingClientRect(),\n    } = {}) => {\n      if (!childRect || !parentRect) {\n        return;\n      }\n\n      if (contentLocation) {\n        const { top: inputTop, left: inputLeft } =\n          typeof contentLocation === 'function'\n            ? contentLocation({\n                childRect,\n                popoverRect,\n                parentRect,\n                boundaryRect,\n                padding,\n                nudgedTop: 0,\n                nudgedLeft: 0,\n                boundaryInset,\n              })\n            : contentLocation;\n\n        const left = parentRect.left + inputLeft;\n        const top = parentRect.top + inputTop;\n\n        popoverRef.current.style.transform = `translate(${left - scoutRect.left}px, ${\n          top - scoutRect.top\n        }px)`;\n\n        onPositionPopover({\n          childRect,\n          popoverRect,\n          parentRect,\n          boundaryRect,\n          padding,\n          nudgedTop: 0,\n          nudgedLeft: 0,\n          boundaryInset,\n        });\n\n        return;\n      }\n\n      const isExhausted = positionIndex === positions.length;\n      const position = isExhausted ? positions[0] : positions[positionIndex];\n\n      const { rect, boundaryViolation } = getNewPopoverRect(\n        {\n          childRect,\n          popoverRect,\n          boundaryRect,\n          position,\n          align,\n          padding,\n          reposition,\n        },\n        boundaryInset,\n      );\n\n      if (boundaryViolation && reposition && !isExhausted) {\n        positionPopover({\n          positionIndex: positionIndex + 1,\n          childRect,\n          popoverRect,\n          parentRect,\n          boundaryRect,\n        });\n        return;\n      }\n\n      const { top, left, width, height } = rect;\n      const shouldNudge = reposition && !isExhausted;\n      const { left: nudgedLeft, top: nudgedTop } = getNudgedPopoverRect(\n        rect,\n        boundaryRect,\n        boundaryInset,\n      );\n\n      let finalTop = top;\n      let finalLeft = left;\n\n      if (shouldNudge) {\n        finalTop = nudgedTop;\n        finalLeft = nudgedLeft;\n      }\n\n      popoverRef.current.style.transform = `translate(${finalLeft - scoutRect.left}px, ${\n        finalTop - scoutRect.top\n      }px)`;\n\n      onPositionPopover({\n        childRect,\n        popoverRect: {\n          top: finalTop,\n          left: finalLeft,\n          width,\n          height,\n          right: finalLeft + width,\n          bottom: finalTop + height,\n        },\n        parentRect,\n        boundaryRect,\n        position,\n        align,\n        padding,\n        nudgedTop: nudgedTop - top,\n        nudgedLeft: nudgedLeft - left,\n        boundaryInset,\n      });\n    },\n    [\n      parentElement,\n      childRef,\n      popoverRef,\n      boundaryElement,\n      contentLocation,\n      positions,\n      align,\n      padding,\n      reposition,\n      boundaryInset,\n      onPositionPopover,\n    ],\n  );\n\n  return {\n    positionPopover,\n    popoverRef,\n    scoutRef,\n  };\n};\n","import { useRef, useMemo } from 'react';\nimport { createContainer } from './util';\n\nexport const useElementRef = (\n  containerClassName?: string,\n  containerStyle?: Partial<CSSStyleDeclaration>,\n) => {\n  const element = useMemo(\n    () => createContainer(containerStyle, containerClassName),\n    [containerClassName, containerStyle],\n  );\n\n  return useRef<HTMLDivElement>(element);\n};\n","import { useRef, useMemo } from 'react';\n\nexport const useMemoizedArray = <T extends number | string>(externalArray: T[]) => {\n  const prevArrayRef = useRef(externalArray);\n  const array = useMemo(() => {\n    if (prevArrayRef.current === externalArray) return prevArrayRef.current;\n\n    if (prevArrayRef.current.length !== externalArray.length) {\n      prevArrayRef.current = externalArray;\n      return externalArray;\n    }\n\n    for (let i = 0; i < externalArray.length; i += 1) {\n      if (externalArray[i] !== prevArrayRef.current[i]) {\n        prevArrayRef.current = externalArray;\n        return externalArray;\n      }\n    }\n\n    return prevArrayRef.current;\n  }, [externalArray]);\n\n  return array;\n};\n","import { useMemo, FC } from 'react';\nimport { ArrowContainerProps } from '.';\nimport { useArrowContainer } from './useArrowContainer';\n\nexport const ArrowContainer: FC<ArrowContainerProps> = ({\n  childRect,\n  popoverRect,\n  position,\n  arrowColor,\n  arrowSize,\n  arrowClassName,\n  arrowStyle: externalArrowStyle,\n  className,\n  children,\n  style: externalArrowContainerStyle,\n}) => {\n  const { arrowContainerStyle, arrowStyle } = useArrowContainer({\n    childRect,\n    popoverRect,\n    position,\n    arrowColor,\n    arrowSize,\n  });\n\n  const mergedContainerStyle = useMemo(\n    () => ({\n      ...arrowContainerStyle,\n      ...externalArrowContainerStyle,\n    }),\n    [arrowContainerStyle, externalArrowContainerStyle],\n  );\n\n  const mergedArrowStyle = useMemo(\n    () => ({\n      ...arrowStyle,\n      ...externalArrowStyle,\n    }),\n    [arrowStyle, externalArrowStyle],\n  );\n\n  return (\n    <div className={className} style={mergedContainerStyle}>\n      <div style={mergedArrowStyle} className={arrowClassName} />\n      {children}\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"popover\":\"popover_popover__14S-p\"};"],"sourceRoot":""}